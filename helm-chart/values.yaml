# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information 
replicaCount:
# Labels for the environment
labels:
  app:
  environment:
# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository:
  # This sets the pull policy for images to always pull as sometimes the developer miss to version their docker tags.
  imagePullPolicy:
  # Overrides the image tag whose default is the chart appVersion.
  tag:

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http


# Additional volumes on the output Deployment definition.
# volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
